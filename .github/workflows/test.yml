name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FERRY_CONTROLLER_IMAGE: ferry-controller:test
  FERRY_TUNNEL_IMAGE: ferry-tunnel:test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - run: |
          ./hack/verify-all.sh

  test:
    runs-on: ubuntu-latest
    needs:
      - verify
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - run: |
          go test ./pkg/...

  build-ferrctl:
    runs-on: ubuntu-latest
    needs:
      - verify
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - run: |
          go build -o ferryctl ./cmd/ferryctl

      - name: Upload ferryctl
        uses: actions/upload-artifact@v2
        with:
          name: ferryctl
          path: ferryctl

  build-ferry-controller:
    runs-on: ubuntu-latest
    needs:
      - verify
    steps:
      - uses: actions/checkout@v3

      - run: |
          docker build -t ${FERRY_CONTROLLER_IMAGE} -f ./images/ferry-controller/Dockerfile . && docker save -o ferry-controller.tar ${FERRY_CONTROLLER_IMAGE}

      - name: Upload ferry
        uses: actions/upload-artifact@v2
        with:
          name: ferry-controller
          path: ferry-controller.tar

  build-ferry-tunnel:
    runs-on: ubuntu-latest
    needs:
      - verify
    steps:
      - uses: actions/checkout@v3

      - run: |
          docker build -t ${FERRY_TUNNEL_IMAGE} -f ./images/ferry-tunnel/Dockerfile . && docker save -o ferry-tunnel.tar ${FERRY_TUNNEL_IMAGE}

      - name: Upload ferry-tunnel
        uses: actions/upload-artifact@v2
        with:
          name: ferry-tunnel
          path: ferry-tunnel.tar

  test-mcs:
    continue-on-error: true
    strategy:
      matrix:
        case:
          - mcs
    runs-on: ubuntu-latest
    needs:
      - build-ferrctl
      - build-ferry-controller
      - build-ferry-tunnel
    steps:
      - uses: actions/checkout@v3

      - name: Download for ferry-controller
        uses: actions/download-artifact@v2
        with:
          name: ferry-controller

      - name: Download for ferry-tunnel
        uses: actions/download-artifact@v2
        with:
          name: ferry-tunnel

      - name: Download for ferryctl
        uses: actions/download-artifact@v2
        with:
          name: ferryctl

      - name: Setup
        run: |
          cp ferryctl /usr/local/bin/ferryctl && chmod +x /usr/local/bin/ferryctl
          docker load -i ferry-controller.tar
          docker load -i ferry-tunnel.tar

      - name: Start cluster
        run: |
          ulimit -n 4096
          ./test/hack/start-environment.sh ${{ matrix.case }}

      - name: Test control-plane and cluster-1
        run: ./test/test/test-in-both-mcs.sh
        env:
          ROUTE_NAME: ferry-test
          CONTROL_PLANE: control-plane
          CLUSTER_1: cluster-1
          CLUSTER_2: control-plane
          TARGET_1: web-1
          TARGET_2: web-0

  test-2-cluster-cases:
    continue-on-error: true
    strategy:
      matrix:
        case:
          - default
          - control-plane-unreachable
          - data-plane-unreachable
    runs-on: ubuntu-latest
    needs:
      - build-ferrctl
      - build-ferry-controller
      - build-ferry-tunnel
    steps:
      - uses: actions/checkout@v3

      - name: Download for ferry-controller
        uses: actions/download-artifact@v2
        with:
          name: ferry-controller

      - name: Download for ferry-tunnel
        uses: actions/download-artifact@v2
        with:
          name: ferry-tunnel

      - name: Download for ferryctl
        uses: actions/download-artifact@v2
        with:
          name: ferryctl

      - name: Setup
        run: |
          cp ferryctl /usr/local/bin/ferryctl && chmod +x /usr/local/bin/ferryctl
          docker load -i ferry-controller.tar
          docker load -i ferry-tunnel.tar

      - name: Start cluster
        run: |
          ulimit -n 4096
          ./test/hack/start-environment.sh ${{ matrix.case }}

      - name: Test control-plane and cluster-1
        run: ./test/test/test-in-both.sh
        env:
          ROUTE_NAME: ferry-test
          CONTROL_PLANE: control-plane
          CLUSTER_1: cluster-1
          CLUSTER_2: control-plane
          TARGET_1: web-1
          TARGET_2: web-0

  test-3-cluster-cases:
    continue-on-error: true
    strategy:
      matrix:
        case:
          - control-plane-unreachable-3-clusters
          - data-plane-unreachable-3-clusters
    runs-on: ubuntu-latest
    needs:
      - build-ferrctl
      - build-ferry-controller
      - build-ferry-tunnel
    steps:
      - uses: actions/checkout@v3

      - name: Download for ferry-controller
        uses: actions/download-artifact@v2
        with:
          name: ferry-controller

      - name: Download for ferry-tunnel
        uses: actions/download-artifact@v2
        with:
          name: ferry-tunnel

      - name: Download for ferryctl
        uses: actions/download-artifact@v2
        with:
          name: ferryctl

      - name: Setup
        run: |
          cp ferryctl /usr/local/bin/ferryctl && chmod +x /usr/local/bin/ferryctl
          docker load -i ferry-controller.tar
          docker load -i ferry-tunnel.tar

      - name: Start cluster
        run: |
          ulimit -n 4096
          ./test/hack/start-environment.sh ${{ matrix.case }}

      - name: Test cluster-1 and cluster-2
        run: ./test/test/test-in-both.sh
        env:
          ROUTE_NAME: ferry-test
          CONTROL_PLANE: control-plane
          CLUSTER_1: cluster-1
          CLUSTER_2: cluster-2
          TARGET_1: web-1
          TARGET_2: web-2

      - name: Test control-plane and cluster-1
        run: ./test/test/test-in-both.sh
        env:
          ROUTE_NAME: ferry-test
          CONTROL_PLANE: control-plane
          CLUSTER_1: cluster-1
          CLUSTER_2: control-plane
          TARGET_1: web-1
          TARGET_2: web-0

  test-not-controller-cases:
    continue-on-error: true
    strategy:
      matrix:
        case:
          - forward
          - manual
    runs-on: ubuntu-latest
    needs:
      - build-ferrctl
      - build-ferry-tunnel
    steps:
      - uses: actions/checkout@v2

      - name: Download for ferry-tunnel
        uses: actions/download-artifact@v2
        with:
          name: ferry-tunnel

      - name: Download for ferryctl
        uses: actions/download-artifact@v2
        with:
          name: ferryctl

      - name: Setup
        run: |
          cp ferryctl /usr/local/bin/ferryctl && chmod +x /usr/local/bin/ferryctl
          docker load -i ferry-tunnel.tar

      - name: Start cluster
        run: |
          ulimit -n 4096
          ./test/hack/start-environment.sh ${{ matrix.case }}

      - name: Test forward
        run: ./test/test/test-${{ matrix.case }}.sh

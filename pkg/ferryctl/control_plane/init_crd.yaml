apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterinformations.ferry.zsm.io
spec:
  group: ferry.zsm.io
  names:
    kind: ClusterInformation
    listKind: ClusterInformationList
    plural: clusterinformations
    singular: clusterinformation
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: status
          type: string
        - jsonPath: .status.lastSynchronizationTimestamp
          name: last-synchronization
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterInformation is the Schema for the clusterinformations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterInformationSpec defines the desired state of ClusterInformation
              properties:
                gateway:
                  description: Gateway is the default gateway of the cluster.
                  properties:
                    address:
                      description: Address is the address of the cluster.
                      type: string
                    navigation:
                      description: Navigation is the navigation of the cluster.
                      items:
                        description: ClusterInformationSpecGatewayWay defines the desired
                          state of ClusterInformationSpecGateway
                        properties:
                          clusterName:
                            description: ClusterName is the name of the cluster to proxy
                              to. cannot be specified together with Proxy.
                            type: string
                          proxy:
                            description: Proxy is the proxy to use. cannot be specified
                              together with ClusterName.
                            type: string
                        type: object
                      type: array
                    reachable:
                      description: Reachable indicates that this cluster is reachable,
                        the default unreachable.
                      type: boolean
                    reception:
                      description: Reception is the reception of the cluster.
                      items:
                        description: ClusterInformationSpecGatewayWay defines the desired
                          state of ClusterInformationSpecGateway
                        properties:
                          clusterName:
                            description: ClusterName is the name of the cluster to proxy
                              to. cannot be specified together with Proxy.
                            type: string
                          proxy:
                            description: Proxy is the proxy to use. cannot be specified
                              together with ClusterName.
                            type: string
                        type: object
                      type: array
                  required:
                    - reachable
                  type: object
                kubeconfig:
                  description: Kubeconfig is the kubeconfig of the cluster, cannot be
                    specified together with InCluster.
                  format: byte
                  type: string
                override:
                  additionalProperties:
                    description: ClusterInformationSpecGateway defines the desired state
                      of ClusterInformation
                    properties:
                      address:
                        description: Address is the address of the cluster.
                        type: string
                      navigation:
                        description: Navigation is the navigation of the cluster.
                        items:
                          description: ClusterInformationSpecGatewayWay defines the
                            desired state of ClusterInformationSpecGateway
                          properties:
                            clusterName:
                              description: ClusterName is the name of the cluster to
                                proxy to. cannot be specified together with Proxy.
                              type: string
                            proxy:
                              description: Proxy is the proxy to use. cannot be specified
                                together with ClusterName.
                              type: string
                          type: object
                        type: array
                      reachable:
                        description: Reachable indicates that this cluster is reachable,
                          the default unreachable.
                        type: boolean
                      reception:
                        description: Reception is the reception of the cluster.
                        items:
                          description: ClusterInformationSpecGatewayWay defines the
                            desired state of ClusterInformationSpecGateway
                          properties:
                            clusterName:
                              description: ClusterName is the name of the cluster to
                                proxy to. cannot be specified together with Proxy.
                              type: string
                            proxy:
                              description: Proxy is the proxy to use. cannot be specified
                                together with ClusterName.
                              type: string
                          type: object
                        type: array
                    required:
                      - reachable
                    type: object
                  description: Override is will replace the default gateway that will
                    reach the target
                  type: object
              required:
                - gateway
              type: object
            status:
              description: ClusterInformationStatus defines the observed state of ClusterInformation
              properties:
                conditions:
                  description: Conditions current service state
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastSynchronizationTimestamp:
                  description: LastSynchronizationTimestamp is the last time synchronization
                    to the cluster.
                  format: date-time
                  type: string
                phase:
                  description: Phase is the phase of the cluster information.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: ferrypolicies.ferry.zsm.io
spec:
  group: ferry.zsm.io
  names:
    kind: FerryPolicy
    listKind: FerryPolicyList
    plural: ferrypolicies
    singular: ferrypolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.ruleCount
          name: rule-count
          type: integer
        - jsonPath: .status.phase
          name: status
          type: string
        - jsonPath: .status.lastSynchronizationTimestamp
          name: last-synchronization
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FerryPolicy is the Schema for the ferrypolicies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FerryPolicySpec defines the desired state of FerryPolicy
              properties:
                rules:
                  items:
                    description: FerryPolicySpecRule defines the desired rule of FerryPolicySpec
                      Service mapping from Exports cluster to Imports cluster
                    properties:
                      exports:
                        description: Exports is a list of exports of the FerryPolicy.
                        items:
                          description: FerryPolicySpecRuleExport defines the desired
                            export of FerryPolicySpecRule
                          properties:
                            clusterName:
                              description: ClusterName is specifies the name of the
                                cluster
                              type: string
                            match:
                              description: Match is specifies the service of matched
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels is specifies the labels of matched
                                    cannot be specified together with Name
                                  type: object
                                name:
                                  description: Name is specifies the name of matched
                                    cannot be specified together with Labels
                                  type: string
                                namespace:
                                  description: Namespace is specifies the namespace
                                    of matched
                                  type: string
                              type: object
                          required:
                            - clusterName
                          type: object
                        type: array
                      imports:
                        description: Imports is a list of imports of the FerryPolicy.
                        items:
                          description: FerryPolicySpecRuleImport defines the desired
                            import of FerryPolicySpecRule
                          properties:
                            clusterName:
                              description: ClusterName is specifies the name of the
                                cluster
                              type: string
                            match:
                              description: Match is specifies the service of matched
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels is specifies the labels of matched
                                    cannot be specified together with Name
                                  type: object
                                name:
                                  description: Name is specifies the name of matched
                                    cannot be specified together with Labels
                                  type: string
                                namespace:
                                  description: Namespace is specifies the namespace
                                    of matched
                                  type: string
                              type: object
                          required:
                            - clusterName
                          type: object
                        type: array
                    required:
                      - exports
                      - imports
                    type: object
                  type: array
              required:
                - rules
              type: object
            status:
              description: FerryPolicyStatus defines the observed state of FerryPolicy
              properties:
                conditions:
                  description: Conditions current service state
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastSynchronizationTimestamp:
                  description: LastSynchronizationTimestamp is the last time synchronization
                    to the cluster.
                  format: date-time
                  type: string
                phase:
                  description: Phase is the phase of the ferry policy.
                  type: string
                ruleCount:
                  description: RuleCount is the number of mapping rules in the FerryPolicy
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: mappingrules.ferry.zsm.io
spec:
  group: ferry.zsm.io
  names:
    kind: MappingRule
    listKind: MappingRuleList
    plural: mappingrules
    singular: mappingrule
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.export
          name: export
          type: string
        - jsonPath: .status.import
          name: import
          type: string
        - jsonPath: .status.phase
          name: status
          type: string
        - jsonPath: .status.lastSynchronizationTimestamp
          name: last-synchronization
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MappingRule is the Schema for the mappingrules API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MappingRuleSpec defines the desired state of MappingRule
              properties:
                export:
                  description: Export is one of export of the  MappingRule.
                  properties:
                    clusterName:
                      description: ClusterName is specifies the name of the cluster
                      type: string
                    service:
                      description: Service is the service
                      properties:
                        name:
                          description: Name is the service name.
                          type: string
                        namespace:
                          description: Namespace is the service namespace.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                  required:
                    - clusterName
                    - service
                  type: object
                import:
                  description: Import is one of import of the  MappingRule.
                  properties:
                    clusterName:
                      description: ClusterName is specifies the name of the cluster
                      type: string
                    service:
                      description: Service is the service
                      properties:
                        name:
                          description: Name is the service name.
                          type: string
                        namespace:
                          description: Namespace is the service namespace.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                  required:
                    - clusterName
                    - service
                  type: object
              required:
                - export
                - import
              type: object
            status:
              description: MappingRuleStatus defines the observed state of MappingRule
              properties:
                conditions:
                  description: Conditions current service state
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                export:
                  description: Export is describe of the export
                  type: string
                import:
                  description: Import is describe of the import
                  type: string
                lastSynchronizationTimestamp:
                  description: LastSynchronizationTimestamp is the last time synchronization
                    to the cluster.
                  format: date-time
                  type: string
                phase:
                  description: Phase is the phase of the mapping rule.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
